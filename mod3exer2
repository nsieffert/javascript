//Complete the following problems:
/************************************************************* */
// Problem 1: Refactor the for() loop to be a while loop:
for(let i=0; i<10; i++) {
    console.log(" the value of i in the loop is : " + i);
}


//your code...

let  i = 0;
    while (i < 10) {
        console.log(" the value of i in the loop is : " + i);
        i++;
    }

/************************************************************* */
// Problem 2:
// multiply the sum of 30 added to two by 20.  Divide the product by 10 raised to the power of 2
(30 + 2) * 10 / (10*10);

//use javascript to compute the value of the above statement. Each individual operation needs to be a function expression. 
//run all the functions after defining them, and print the answer to the console.

//your code...

	let n = 30;
    let p;
    let add = function () {
        n = n + 2;
    }
    let multiply = function () {
        n = n * 20;
    }
    let arithPower = function () {
        p = Math.pow(10, 2);        
    }
    let divide = function (e, f) {
        n = n / p;
    }

    add();
    multiply();
    arithPower(10, 2);
    divide();
    console.log(n); // answer is 6.4
	

/************************************************************* */
//Problem 3:
//Determine whether the following values are "truthy" or "falsy".  console.log() the value, whether the value is 'truthy' or 'falsy', 
along with your reasoning why using String interpolation.
// values : 
// 20
// 0
// "zero";
// const zero = 20;
// null
// "0"
// !""
// {}
// () => {console.log("hello TEKcamp!");
// 125
// undefined
// ""

//your code...

 function truthyTest(value) {

        if (value) {
            console.log(`${`${value}`} is is truthy: considered true when used in a boolean context`);
        } else {
            console.log(`${`${value}`} is falsy(in boolean context).
            It is one of the six falsy values: false, 0, undefined, null, NaN, empty string`);
        }
    }
    truthyTest(20);
    truthyTest(0);
    truthyTest("zero");
    truthyTest('const zero = 20');
    truthyTest(null);
    truthyTest("0");
    truthyTest(!"");
    truthyTest();
    truthyTest("Hello TEKCamp");
    truthyTest(125);
    truthyTest(undefined);
    truthyTest(" ");




//directly below are the results from console.log for each item:

/* 
20 is is truthy: considered true when used in a boolean context
0 is falsy(in boolean context).
            It is one of the six falsy values: false, 0, undefined, null, NaN, empty string
zero is is truthy: considered true when used in a boolean context
const zero = 20 is is truthy: considered true when used in a boolean context
null is falsy(in boolean context).
            It is one of the six falsy values: false, 0, undefined, null, NaN, empty string
0 is is truthy: considered true when used in a boolean context
true is is truthy: considered true when used in a boolean context
undefined is falsy(in boolean context).
            It is one of the six falsy values: false, 0, undefined, null, NaN, empty string
Hello TEKCamp is is truthy: considered true when used in a boolean context
125 is is truthy: considered true when used in a boolean context
undefined is falsy(in boolean context).
            It is one of the six falsy values: false, 0, undefined, null, NaN, empty string
  is is truthy: considered true when used in a boolean context */

/************************************************************* */
// Problem 4:
// Refactor the following code using a switch statement:

const day = "friday";

if(day === "monday") {
    console.log("we got a long week ahead of us...");
} else if(day === "tuesday") {
    console.log("tuesday's are still beterr than mondays, but LONG way to go still");
} else if (day === "wednesday") {
    console.log("We are smack dab in the middle of the week");
} else if (day === "thursday") {
    console.log("Thursday night... the mood is right");
} else if (day === "friday") {
    console.log("TGIF.  Friday truly is the best day of the week!")
} else {
    console.log("It's a weekend!")
}

//your code...

const day = "friday";

    switch (day) {
        case 'monday':
            console.log("we got a long week ahead of us...");
            break;
        case 'tuesday':
            console.log("tuesday's are still beterr than mondays, but LONG way to go still");
            break;
        case 'wednesday':
            console.log("We are smack dab in the middle of the week");
            break;
        case 'thursday':
            console.log("Thursday night... the mood is right");
            break;
        case 'friday':
            console.log("TGIF.  Friday truly is the best day of the week!")
            break;
        default:
            console.log("It's a weekend!")
    }

/************************************************************* */
// Problem 5: Refactor the following functions to use a ternary expression:
const age = 10;
if (age > 21) console.log("adult"); else {
    console.log("minor");
}

if (age > 13 && age < 19) console.log('teen'); else {
    console.log("not a teenager");
};

if (age > 65) console.log("retired"); else {
    console.log("still working...");
}

//your code...

let age = 15;
    (age > 13 && age < 19) ? console.log('teen') : console.log('not a teenager');
    (age > 65) ? console.log('retired') : console.log('still working...');

/************************************************************* */
// Problem 6: Create an object literal that represents yourself.  set it to a variable that appropriately describes the object.  Include the following properties:
/*
-name
-age
-gender
-hobbies
-profession
-education
-add a method on your object, named learn. the learn method should print the value of the name property using the 'this' keyword.
-add another method on your object of any action you want to perform, using some property that exists on your object, making sure to utilize the 'this' keyword.
*/

//your code...

let  person = {
        name: 'Norita',
        age: '44',
        gender: 'female',
        hobbies: 'writing fiction',
        profession: 'preacher',
        education: 'PhD',
        learn: function () {
            return this.name;
        },
        calcbirthYear: function () {
            return 2020 - this.age;
        }
    };
    console.log(person.learn(), person.calcbirthYear());


/************************************************************* */
// Problem 6: Create an object literal that represents any object in the real world that you like.  
//Try to come up with a realistic set of properties and methods that would accurately describe that object.  
//In at least one of your methods, use the 'this' keyword to refer back to one of the properties you defined on this object literal.  

//your code...

let  motorcycle = {
        name: 'Dragon',
        brand: 'Harley Davidson',
        age: '13',
        style: 'customized-trike',
        horsePower: 110,
        color: 'green',
        isFast: true,
        speed: function () {
            return this.horsePower
        }
    }
    console.log(motorcycle.horsePower); // because I have gotten it up to 110 mph!
	
/************************************************************* */
//Problem 7: create a function that outputs your 3 favorite data types, with a message explaining why you like that data type.

//your code...

function favDataTypes(a, b, c) {
        console.log('I like datatype ' + a + ' because they describe the real world');
        console.log('I like datatype ' + b + ' because they are fun to manipulate');
        console.log('I like datatype ' + c + ' because they help me stay organized');
    }

    (favDataTypes('objects', 'numbers', 'arrays'));

/************************************************************* */
//Bonus assignments:

//1. Create a Higher Order Function called multiple(x) that takes a single parameter.  
//This HOF should return another function fn(y) that takes another single parameter y.  
//This inner function should compute the product of it's parameter with the parameter passed into multiple.  
//Use this returned "first-class" function to compute triples of any given number. 

// from Abram Joblonski, clarifying this code step: "the prior sentences are referring to creating and returning a function that multiplies 2 numbers, right?  and then it tells you to use that function, to multiply any number by 3...  does that help?

//your code...

 function multiple(x) {
        return function fn(y) {
            console.log(x * y);
        }
    }
    const myFunct = multiple(4, 4);

    myFunct(3);

// 2. Write an outer function called stockGain that has cost basis (basis) as a parameter; 
//declare a variable called message that holds " is how much the stock has increased".  
//Return an inner function with years (yrs) as a parameter and declare a variable for growth rate (r) of 5%. Console log your calculation.

// Once finished, declare a variable called futureValue that holds your stockGain function and enter any amount for the cost basis and a 
//number for the number of years.  Run the function returned by the higher order function to display the future value of the stock.  

//your code...

function stockGain(basis) {
        return function yrsGain(years) {
            let growthRate = basis * .05 * years;
            return growthRate;
        }
    }
    let gainCalc = stockGain(1000);
    console.log(gainCalc(9) + ' is how much the stock has increased');

    let futureValue = stockGain(1000);
    console.log(futureValue(50) + ' is how much it will increase in the future');
